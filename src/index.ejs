<% htmlWebpackPlugin.options.appMountIds = htmlWebpackPlugin.options.appMountIds || [] %>
<% htmlWebpackPlugin.options.scripts = htmlWebpackPlugin.options.scripts || [] %>

<!doctype html <% if (typeof helmet !== 'undefined') { %><%- helmet.htmlAttributes.toString() %><% } %>>
<html lang="en">

<head>
  <meta name="theme-color" content="#19ca7f">
  <meta content="ie=edge" http-equiv="x-ua-compatible">
  <% if (Array.isArray(htmlWebpackPlugin.options.meta)) { %>
    <% for (item of htmlWebpackPlugin.options.meta) { %>
    <meta<% for (key in item) { %> <%= key %>="<%= item[key] %>"<% } %>>
    <% } %>
  <% } %>
  <link rel="manifest" href="/public/app-manifest.json">
  <link rel="shortcut icon" type="image/x-icon" href="/public/favicon.ico">
  <link rel="apple-touch-icon" sizes="80x80" href="/public/touch-icon-80.png">
  <link rel="apple-touch-icon" sizes="120x120" href="/public/touch-icon-120.png">
  <link rel="apple-touch-icon" sizes="152x152" href="/public/touch-icon-152.png">
  <link rel="apple-touch-icon" sizes="180x180" href="/public/touch-icon-180.png">
  <link rel="apple-touch-icon" sizes="512x512" href="/public/touch-icon-512.png">
  <% if (typeof helmet !== 'undefined') { %>
    <%- helmet.title.toString() %>
    <%- helmet.meta.toString() %>
    <%- helmet.link.toString() %>
  <% } %>
  <% if (typeof css !== 'undefined') { %>
    <%- css %>
  <% } %>
</head>

<body <% if (typeof helmet !== 'undefined') { %><%- helmet.bodyAttributes.toString() %><% } %>>
  <% if (htmlWebpackPlugin.options.bodyHtmlSnippet) { %>
    <%= htmlWebpackPlugin.options.bodyHtmlSnippet %>
  <% } %>
  <% if (htmlWebpackPlugin.options.appMountId) { %>
  <div id="<%= htmlWebpackPlugin.options.appMountId %>">
  <% if (htmlWebpackPlugin.options.appMountHtmlSnippet) { %>
    <%= htmlWebpackPlugin.options.appMountHtmlSnippet %>
  <% } %>
  <% if (typeof html !== 'undefined') { %><%- html %><% } %>
  </div>
  <% } %>
  <% for (item of htmlWebpackPlugin.options.appMountIds) { %>
  <div id="<%= item %>"></div>
  <% } %>
  <% if (htmlWebpackPlugin.options.window) { %>
  <script type="text/javascript">
    <% for (key in htmlWebpackPlugin.options.window) { %>
    window['<%= key %>'] = <%= JSON.stringify(htmlWebpackPlugin.options.window[key]) %>;
    <% } %>
  </script>
  <% } %>
  <% if (htmlWebpackPlugin.options.inlineManifestWebpackName) { %>
      <%= htmlWebpackPlugin.files[htmlWebpackPlugin.options.inlineManifestWebpackName] %>
  <% } %>
  <% for (item of htmlWebpackPlugin.options.scripts) { %>
  <% if (typeof item === 'string' || item instanceof String) { item = { src: item, type: 'text/javascript' } } %>
  <script<% for (key in item) { %> <%= key %>="<%= item[key] %>"<% } %>></script>
  <% } %>

  <% for (key in htmlWebpackPlugin.files.chunks) { %>
  <% if (htmlWebpackPlugin.files.jsIntegrity) { %>
  <script
    src="<%= htmlWebpackPlugin.files.chunks[key].entry %>"
    type="text/javascript"
    integrity="<%= htmlWebpackPlugin.files.jsIntegrity[htmlWebpackPlugin.files.js.indexOf(htmlWebpackPlugin.files.chunks[key].entry)] %>"
    crossorigin="<%= webpackConfig.output.crossOriginLoading %>"></script>
  <% } else { %>
  <script src="<%= htmlWebpackPlugin.files.chunks[key].entry %>" type="text/javascript"></script>
  <% } %>
  <% } %>

  <% if (htmlWebpackPlugin.options.devServer) { %>
  <script src="<%= htmlWebpackPlugin.options.devServer %>/webpack-dev-server.js" type="text/javascript"></script>
  <% } %>
</body>

</html>
